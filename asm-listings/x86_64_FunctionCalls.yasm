__ZN8Workload6Atomic7Dummies5DummyEv:  
	.cfi_startproc
## %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	popq	%rbp
	retq
	.cfi_endproc
                                        ## -- End function
	.globl	__ZN8Workload6Atomic7Dummies11DummyReturnEv ## -- Begin function _ZN8Workload6Atomic7Dummies11DummyReturnEv
	.p2align	4, 0x90
__ZN8Workload6Atomic7Dummies11DummyReturnEv: ## @_ZN8Workload6Atomic7Dummies11DummyReturnEv
	.cfi_startproc
## %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	xorl	%eax, %eax
	popq	%rbp
	retq
	.cfi_endproc
                                        ## -- End function
	.globl	__ZN8Workload6Atomic7Dummies14DummyRecursiveEi ## -- Begin function _ZN8Workload6Atomic7Dummies14DummyRecursiveEi
	.p2align	4, 0x90
__ZN8Workload6Atomic7Dummies14DummyRecursiveEi: ## @_ZN8Workload6Atomic7Dummies14DummyRecursiveEi
	.cfi_startproc
## %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movl	%edi, -4(%rbp)
	cmpl	$0, -4(%rbp)
	je	LBB5_2
## %bb.1:
	movl	-4(%rbp), %eax
	subl	$1, %eax
	movl	%eax, %edi
	callq	__ZN8Workload6Atomic7Dummies14DummyRecursiveEi
LBB5_2:
	addq	$16, %rsp
	popq	%rbp
	retq
	.cfi_endproc
                                        ## -- End function
	.globl	__ZN8Workload6Atomic7Dummies20DummyRecursiveReturnEi ## -- Begin function _ZN8Workload6Atomic7Dummies20DummyRecursiveReturnEi
	.p2align	4, 0x90
__ZN8Workload6Atomic7Dummies20DummyRecursiveReturnEi: ## @_ZN8Workload6Atomic7Dummies20DummyRecursiveReturnEi
	.cfi_startproc
## %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movl	%edi, -8(%rbp)
	cmpl	$0, -8(%rbp)
	je	LBB6_2
## %bb.1:
	movl	-8(%rbp), %eax
	subl	$1, %eax
	movl	%eax, %edi
	callq	__ZN8Workload6Atomic7Dummies20DummyRecursiveReturnEi
	movl	%eax, -4(%rbp)
	jmp	LBB6_3
LBB6_2:
	movl	$0, -4(%rbp)
LBB6_3:
	movl	-4(%rbp), %eax
	addq	$16, %rsp
	popq	%rbp
	retq
	.cfi_endproc
                                        ## -- End function
	.globl	__ZN8Workload6Atomic7Dummies21DummyRecursiveComplexEiiii ## -- Begin function _ZN8Workload6Atomic7Dummies21DummyRecursiveComplexEiiii
	.p2align	4, 0x90
__ZN8Workload6Atomic7Dummies21DummyRecursiveComplexEiiii: ## @_ZN8Workload6Atomic7Dummies21DummyRecursiveComplexEiiii
	.cfi_startproc
## %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movl	%edi, -4(%rbp)
	movl	%esi, -8(%rbp)
	movl	%edx, -12(%rbp)
	movl	%ecx, -16(%rbp)
	movl	-8(%rbp), %ecx
	movl	%ecx, -20(%rbp)
	cmpl	$0, -4(%rbp)
	je	LBB7_2
## %bb.1:
	movl	-4(%rbp), %eax
	subl	$1, %eax
	movl	-8(%rbp), %esi
	movl	-12(%rbp), %edx
	movl	-16(%rbp), %ecx
	movl	%eax, %edi
	callq	__ZN8Workload6Atomic7Dummies21DummyRecursiveComplexEiiii
LBB7_2:
	addq	$32, %rsp
	popq	%rbp
	retq
	.cfi_endproc
                                        ## -- End function
	.globl	__ZN8Workload6Atomic13FunctionCallsEv ## -- Begin function _ZN8Workload6Atomic13FunctionCallsEv
	.p2align	4, 0x90
__ZN8Workload6Atomic13FunctionCallsEv:  ## @_ZN8Workload6Atomic13FunctionCallsEv
	.cfi_startproc
## %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	leaq	__ZN8Workload6Atomic7Dummies21DummyRecursiveComplexEiiii(%rip), %rax
	leaq	__ZN8Workload6Atomic7Dummies20DummyRecursiveReturnEi(%rip), %rcx
	leaq	__ZN8Workload6Atomic7Dummies14DummyRecursiveEi(%rip), %rdx
	leaq	__ZN8Workload6Atomic7Dummies11DummyReturnEv(%rip), %rsi
	leaq	__ZN8Workload6Atomic7Dummies5DummyEv(%rip), %rdi
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	%rcx, -32(%rbp)
	movq	%rax, -40(%rbp)
	callq	*-8(%rbp)
	callq	*-16(%rbp)
	movl	$100, %edi
	movl	%eax, -44(%rbp)         ## 4-byte Spill
	callq	*-24(%rbp)
	movl	$100, %edi
	callq	*-32(%rbp)
	movl	$100, %edi
	xorl	%r8d, %r8d
	movl	%r8d, %esi
	movl	%r8d, %edx
	movl	%r8d, %ecx
	movl	%eax, -48(%rbp)         ## 4-byte Spill
	callq	*-40(%rbp)
	addq	$48, %rsp
	popq	%rbp
	retq