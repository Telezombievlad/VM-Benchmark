LCPI1_0:
	.quad	4607182418800017408     ; double 1 
                                    ; ...
	movsd	LCPI1_0(%rip), %xmm0    ; xmm0 := 1 (xmm0 = <data at the absolute address of table LCPI1_0>)
	movsd	%xmm0, -8(%rbp)         ; a = 1;
	movsd	%xmm0, -16(%rbp)        ; b = 1;
	movsd	%xmm0, -24(%rbp)        ; c = 1;
	movsd	-8(%rbp), %xmm0         ; c = a - b;
	subsd	-16(%rbp), %xmm0        ; ^
	movsd	%xmm0, -24(%rbp)        ; ^
	movsd	-8(%rbp), %xmm0         ; c = a + b
	addsd	-16(%rbp), %xmm0        ; ^
	movsd	%xmm0, -24(%rbp)        ; ^
	movsd	-8(%rbp), %xmm0         ; c = a * b
	mulsd	-16(%rbp), %xmm0        ; ^
	movsd	%xmm0, -24(%rbp)        ; ^
	movsd	-8(%rbp), %xmm0         ; c = a / b
	divsd	-16(%rbp), %xmm0        ; ^
	movsd	%xmm0, -24(%rbp)        ; ^
	movsd	-8(%rbp), %xmm0         ; c = sqrt(a)
	sqrtsd	%xmm0, %xmm0            ; ^
	movsd	%xmm0, -24(%rbp)        ; ^
	movsd	-8(%rbp), %xmm0         ; xmm0 := a
	movsd	-16(%rbp), %xmm1        ; xmm1 := b
	movaps	%xmm1, %xmm2            ; xmm2 := b
	movaps	%xmm0, %xmm3            ; xmm3 := a
	cmpunordsd	%xmm3, %xmm3        ; Set a flag to true if a is NaN
	movaps	%xmm3, %xmm4            ; xmm4 := a
	andpd	%xmm2, %xmm4            ; xmm2 := a
	minsd	%xmm0, %xmm1            ; xmm1 := min(a, b)
	andnpd	%xmm1, %xmm3            ; xmm3 &= xmm1
	orpd	%xmm4, %xmm3            ; xmm3 |= xmm4
	movsd	%xmm3, -24(%rbp)        ; c = xmm3